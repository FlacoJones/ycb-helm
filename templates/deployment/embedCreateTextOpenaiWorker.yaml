apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.embedcreatetextopenai.name}}
  namespace: {{.Values.namespace}}
  labels:
    app: {{.Values.embedcreatetextopenai.name}}
spec:
  replicas: {{.Values.embedcreatetextopenai.replicas}}
  selector:
    matchLabels:
      app: {{.Values.embedcreatetextopenai.name}}
  template:
    metadata:
      labels:
        app: {{.Values.embedcreatetextopenai.name}}
    spec:
      containers:
        - name: {{.Values.embedcreatetextopenai.name}}
          image: "{{ .Values.embedcreatetextopenai.image.repository }}:{{ .Values.embedcreatetextopenai.image.tag }}"
          imagePullPolicy: {{.Values.embedcreatetextopenai.image.pullPolicy}}
          ports:
            - containerPort: {{.Values.embedcreatetextopenai.service.port}}
          env:
            - name: GO_ENV
              value: "{{ .Values.embedcreatetextopenai.GO_ENV }}"
            - name: SERVER_PORT
              value: "{{ .Values.embedcreatetextopenai.SERVER_PORT }}"
            - name: WORKER_NAME
              value: "{{ .Values.embedcreatetextopenai.WORKER_NAME }}"
            - name: NATS_URL
              value: "{{ .Values.embedcreatetextopenai.NATS_URL }}"
            - name: NATS_DLQ_SUBJECT
              value: "{{ .Values.embedcreatetextopenai.NATS_DLQ_SUBJECT }}"
            - name: STREAM
              value: "{{ .Values.embedcreatetextopenai.STREAM }}"
            - name: SUBJECTS
              value: "{{ .Values.embedcreatetextopenai.SUBJECTS }}"
            - name: REPLY_SUBJECT
              value: "{{ .Values.embedcreatetextopenai.REPLY_SUBJECT }}"
            - name: MAX_DELIVERY_ATTEMPTS
              value: "{{ .Values.embedcreatetextopenai.MAX_DELIVERY_ATTEMPTS }}"
            - name: EAK_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: eak-encryption-key
                  key: eak-encryption-key
