apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.record.name}}
  namespace: {{.Values.namespace}}
  labels:
    app: {{.Values.record.name}}
spec:
  replicas: {{.Values.record.replicas}}
  selector:
    matchLabels:
      app: {{.Values.record.name}}
  template:
    metadata:
      labels:
        app: {{.Values.record.name}}
    spec:
      containers:
        - name: {{.Values.record.name}}
          image: "{{ .Values.record.image.repository }}:{{ .Values.record.image.tag }}"
          imagePullPolicy: {{.Values.record.image.pullPolicy}}
          ports:
            - containerPort: {{.Values.record.service.port}}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-access-key-id
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret-access-key
                  key: aws-secret-access-key
            - name: CLOUDFRONT_URL
              valueFrom:
                secretKeyRef:
                  name: cloudfront-url
                  key: cloudfront-url
            - name: CLOUDFRONT_PRIVATE_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: cloudfront-private-key-id
                  key: cloudfront-private-key-id
            - name: CLOUDFRONT_PRIVATE_KEY_PATH
              valueFrom:
                secretKeyRef:
                  name: cloudfront-private-key-path
                  key: cloudfront-private-key-path
            - name: RECORD_IMAGE_BUCKET
              value: "{{ .Values.record.RECORD_IMAGE_BUCKET }}"
            - name: AWS_REGION
              value: "{{ .Values.record.AWS_REGION }}"
